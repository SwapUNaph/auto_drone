<?xml version="1.0"?>
<!--
<author>Swapneel Naphade</author>
<email>snaphade@umd.edu</email>
<version>2.0</version>
-->

<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	   <arg name="world_name" value="$(find cvg_sim_gazebo)/worlds/adr_track.world"/>
  </include>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find cvg_sim_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find cvg_sim_gazebo)/urdf/quadrotor_sensors.urdf.xacro"/> 
  </include>
  
   <!-- Load simulation: true parameter -->
	<rosparam command="load" file="$(find auto_drone)/params/zed_parrot.yaml" />
  
    <!-- Launch RVIZ -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find auto_drone)/rviz/adr_track.rviz" />
  
  <!-- Launch RQT_PLOT -->
  <node pkg="rqt_plot" name="rqt_plot" type="rqt_plot" args=" /gate_pose/ground/position" />
  
  <!-- Launch Keyboard Teleop -->
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop"  args="-d _speed:=1 _turn:=1"/>
  
  <!-- Takeoff Command -->
  <node pkg="rostopic" type="rostopic" name="rostopic" args="pub /ardrone/takeoff std_msgs/Empty --once"/>
  
  <!-- Launch controller node -->
<!--
   <node pkg="auto_drone" type="controller.py" name="controller" output='screen'/>
-->
   
   <!-- Launch planner node -->
<!--
   <node pkg="auto_drone" type="planner.py" name="planner" output='screen'/>
-->
   
   <!-- Launch gate_detector node -->
   <node pkg="auto_drone" type="gate_detection.py" name="gate_detector" output='screen'/>
   
    <!-- Launch pose estimator node -->
  <node pkg="auto_drone" type="gate_pose_estimator.py" name="gate_pose_estimator" output='screen'/>
  
   <!-- Launch planner node -->
  <node pkg="auto_drone" type="planner.py" name="planner" output='screen'/>
   
</launch>
